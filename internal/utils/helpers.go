package utils

import (
	"encoding/json"
	"fmt"
	"time"

	tele "gopkg.in/telebot.v4"
)

// –£–ø—Ä–æ—â—ë–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ datatypes.JSON
func UnmarshalJSON(data interface{}, v interface{}) error {
	switch t := data.(type) {
	case []byte:
		return json.Unmarshal(t, v)
	case string:
		return json.Unmarshal([]byte(t), v)
	default:
		return json.Unmarshal([]byte(fmt.Sprintf("%v", t)), v)
	}
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞" –¥–ª—è —ç—Ç–∞–ø–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
func CancelKeyboard() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true, OneTimeKeyboard: true}
	btnCancel := menu.Text("‚ùå –û—Ç–º–µ–Ω–∞")
	menu.Reply(menu.Row(btnCancel))
	return menu
}

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–æ–±–∞–≤–∏—Ç—å" –∏ "–ü–æ–º–æ—â—å"
func MainMenuKeyboard() *tele.ReplyMarkup {
	menu := &tele.ReplyMarkup{ResizeKeyboard: true}
	btnAdd := menu.Text("‚ûï –î–æ–±–∞–≤–∏—Ç—å")
	btnList := menu.Text("üìÉ –°–ø–∏—Å–æ–∫")
	btnHelp := menu.Text("‚ùì –ü–æ–º–æ—â—å")
	btnLog := menu.Text("üìä –õ–æ–≥")
	btnStatus := menu.Text("üìä –°—Ç–∞—Ç—É—Å")
	menu.Reply(menu.Row(btnAdd, btnList, btnLog, btnStatus, btnHelp))
	return menu
}

func SendMainMenu(c tele.Context) error {
	return c.Send("üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n\n" +
		"/add ‚Äì –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–±–∞–≤–∫—É\n" +
		"/list ‚Äì —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–æ–∫\n" +
		"/status ‚Äì —Å—Ç–∞—Ç—É—Å –ø—Ä–∏—ë–º–∞\n" +
		"/help ‚Äì –ø–æ–º–æ—â—å")
}

func CloseMenu(c tele.Context) *tele.ReplyMarkup {
	replyMarkup := &tele.ReplyMarkup{}
	replyMarkup.RemoveKeyboard = true
	return replyMarkup
}

func FormatDateRu(t time.Time) string {
	months := []string{"—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"}
	day := t.Day()
	month := months[int(t.Month())-1]
	year := t.Year()
	return fmt.Sprintf("%d %s %d", day, month, year)
}
